name: publish-app

on:
  issue_comment:
    types: [created]
  workflow_dispatch:

jobs:
  deploy-check:
    runs-on: macos-latest
    steps:
      - name: acknowledge deployment request to commenter
        id: check
        uses: khan/pull-request-comment-trigger@master
        with:
          trigger: "/publish"
          reaction: rocket
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    outputs:
      triggered: ${{ steps.check.outputs.triggered }}

  deploy:
    runs-on: macos-latest
    needs: deploy-check
    if: needs.deploy-check.outputs.triggered == 'true'
    steps:
      - name: Github checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Add osx certs
        run: chmod +x ./build/add-osx-cert.sh && ./build/add-osx-cert.sh
        env:
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}

      - name: Prepare for app notarization (macOS)
        run: echo ${{ secrets.APPLE_API_KEY }} | base64 -d > ./AuthKey_${{ secrets.APPLE_API_KEY_ID }}.p8

      - name: Install Packages
        run: yarn install

      - name: Publish app
        run: yarn publish-app --universal
        env:
          DEBUG: *electron*
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          APPLE_APP_BUNDLE_ID: ${{ secrets.APPLE_APP_BUNDLE_ID }}
          APPLE_API_KEY_ID: ${{secrets.APPLE_API_KEY_ID}}
          APPLE_API_ISSUER: ${{secrets.APPLE_API_ISSUER}}
